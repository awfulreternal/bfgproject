import sqlite3




from aiogram import types




from aiogram.dispatcher import Dispatcher




from commands.db import conn, cursor  # –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–π –±–¥









print('!!! –°–û–ó–î–ê–ù –ü–†–û–ú–û–ö–û–î "–Ω–µ–ø—Ä–æ–º–æ s". –î–ª—è —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞ —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª ptomo.py –∏–∑ –ø–∞–ø–∫–∏ modules.')









conn2 = sqlite3.connect('modules/promo.db')




cursor2 = conn2.cursor()









cursor2.execute('''




CREATE TABLE IF NOT EXISTS promo (




    id INTEGER




);




''')




conn2.commit()














async def getname(user_id):




    cursor.execute("SELECT name FROM users WHERE user_id=?", (int(user_id),))




    name = cursor.fetchone()[0]




    return name














async def promo_start(message: types.Message):




    user_id = message.from_user.id




    username = await getname(user_id)









    cursor2.execute('SELECT id FROM promo WHERE id = ?', (user_id,))




    result = cursor2.fetchone()









    if result:




        await message.reply(f'üòû <b>{username}</b>, –≤—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥.', parse_mode='html')




    else:




        cursor.execute("UPDATE users SET exp = exp + 1e100 WHERE user_id = ?", (user_id,))




        cursor.execute("UPDATE users SET corn = corn + 10000 WHERE user_id = ?", (user_id,))




        cursor.execute("UPDATE mine SET matter = matter + 10000 WHERE user_id = ?", (user_id,))




        cursor.execute("UPDATE users SET ecoins = ecoins + 15000 WHERE user_id = ?", (user_id,))




        cursor.execute("UPDATE mine SET biores = biores + 999999999 WHERE user_id = ?", (user_id,))




        conn.commit()





        cursor2.execute('INSERT INTO promo (id) VALUES (?)', (user_id,))
        conn2.commit()
        await message.reply(f'üéÅ <b>{username}</b>, –≤—ã –ø–æ–ª—É—á–∏–ª–∏:\n1e100$\n1.000.000.000 O–ø—ã—Ç–∞\n10.000 –ó–µ—Ä–Ω\n10.000 –º–∞—Ç–µ—Ä–∏–∏\n1.999 B-coins\n999.999.999 –±–∏–æ—Ä–µ—Å–æ–≤', parse_mode='html')

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(promo_start, lambda message: message.text.lower().startswith('–Ω–µ–ø—Ä–æ–º–æ s'))